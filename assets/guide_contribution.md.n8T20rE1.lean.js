import{_ as t,c as i,a8 as o,o as s}from"./chunks/framework.BLoy52B6.js";const p=JSON.parse('{"title":"Contribution","description":"","frontmatter":{},"headers":[],"relativePath":"guide/contribution.md","filePath":"guide/contribution.md","lastUpdated":1729425497000}'),n={name:"guide/contribution.md"};function a(r,e,l,u,c,d){return s(),i("div",null,e[0]||(e[0]=[o('<h1 id="contribution" tabindex="-1">Contribution <a class="header-anchor" href="#contribution" aria-label="Permalink to &quot;Contribution&quot;">​</a></h1><p>Initiated as a small experiment, this project is currently gaining some attention. I always try to invest some time in development, which is hard with a full-time job. The help from the open source community is very appreciated. Feel free co contribute to this small project, whenever you see a bug, have a question or know how to improve the component. You can start with an existing issue or propose you own concern.</p><h2 id="issues" tabindex="-1">Issues <a class="header-anchor" href="#issues" aria-label="Permalink to &quot;Issues&quot;">​</a></h2><p>Have you seen a bug or want to suggest a new feature? Let&#39;s discuss it in an issue. I prefer issues to PRs, because issues help us to organize ourselves better and finally decide if a PR is necessary and who should be responsible for it. In this way we can avoid unnecessary effort. Give a concise description of your request, share your setup and any other information that is relevant. The following points can be very useful in most cases:</p><ul><li>Used library version</li><li>OS, Browser, Browser version</li><li>Device</li><li>Screenshots (if visual issue noticed)</li><li>Reproduction link (CodeSandbox, CodePen or similar)</li></ul><h2 id="pull-requests-prs" tabindex="-1">Pull requests (PRs) <a class="header-anchor" href="#pull-requests-prs" aria-label="Permalink to &quot;Pull requests (PRs)&quot;">​</a></h2><p>In a PR you can implement new features, fix a bug, improve the documentation or just add a new cool example to the demo site. However, before you submit your pull request, consider the following guidelines:</p><ul><li>I recommend that you submit an issue first to discuss your intentions.</li><li>When issuing PR&#39;s that change code, make your changes in a new git branch based on <code>*-dev</code>. Do not merge any code changes in the <code>master</code>!</li><li>Your commit messages must follow the <a href="https://www.conventionalcommits.org/en/v1.0.0/" target="_blank" rel="noreferrer">Conventional Commits</a> specification.</li><li>Follow the Airbnb JavaScript Style Guide. Always run <code>npm run lint</code> to check for possible code style problems.</li><li>Run the full unit test suite before submitting and make sure all tests pass.</li><li>If the PR introduces a new feature or fixes an issue, please add/update/extend the appropriate test case. Also, make sure to update the documentation.</li><li>Remember compatibility. When adding new features, please test them (if possible) in different browsers (Chrome, Firefox, Safari...) on different platforms (Android, IOS...).</li><li>If your PR satisfies all points, I will merge it into the dev branch, test the introduced changes live on the demo page and finally release a new stable version.</li></ul><p>I thank you in advance for your contribution! You can learn how to get started wit the development in the <a href="./development.html">development guide</a>.</p>',9)]))}const m=t(n,[["render",a]]);export{p as __pageData,m as default};
